#!/bin/zsh -e
# vim: ft=zsh ts=4 sw=4 et

# Create snapshot of ../__active and its subvolumes

mksnap() {
    local snapshot=${(I:3:)${"$(date +%F-%X)"[0,-3]//:/}/-/.}
    local snapdirs
    typeset -a thisdir
    thisdir=${PWD:h:t}
    btrfs sub list ../__active 2>&1 | while read line; do
        [[ $line == */$thisdir/'__active/'* ]] && snapdirs+=(${(@)line[(w)7]/__active\//}) || :
    done

    set -v
    $PRECMD btrfs sub snap ../__active $snapshot
    sleep 1s
    set +v
    for dir ($snapdirs) {
        dir=${${dir}#roots/${thisdir}/}
        set -v
        $PRECMD rmdir ${snapshot}/${dir} && \
            $PRECMD btrfs sub snap ../__active/${dir} ${snapshot}/${dir}
        set +v
    }
}

delsnap() {
    local snapshot=$1
    local snapdirs
    typeset -a thisdir
    thisdir=${PWD:h:t}
    if [[ -d $snapshot ]]; then
        btrfs sub list $snapshot 2>&1 | while read line; do
            [[ $line == */${snapshot}/* ]] && snapdirs+=(${(@)line[(w)7]##*/}) || :
        done

        local answer
        for i (${(@)snapdirs}) print ">>$i<<"
        if [[ -z $PRECMD ]]; then
            local subdirs=${(j:, :)snapdirs[1,-2]#, }
            if [[ -z $subdirs ]]; then
                print "Host: ${thisdir}\nReady to destroy ${snapshot} (no subsnaps found)."
            else
                print "Host: ${thisdir}\nReady to destroy ${snapshot} and its subdirs ${(j:, :)snapdirs[1,-2]#, } and ${snapdirs[-1]}."
            fi
            print -n "Continue? [y/n] "
            read -q answer
            print
            [[ ${answer:l} == ("y"|"yes") ]] || { print "Bailing out." >&2; print; exit 1 }
        fi
        for dir ($snapdirs) {
            set -v
            $PRECMD btrfs sub del ${snapshot}/${dir}
            set +v
        }
        $PRECMD btrfs sub del $snapshot
    else
        print "Error: $snapshot does not exist." >&2
        exit 1
    fi
}

usage() {
    print "Usage: $0 [-n] [create | remove snapshot-dir]" >&2
}

print

if [[ $1 == "-n" ]]; then
    typeset -g PRECMD="echo"
    print "Attention: This is what will be done if you don't specify -n:"
    shift
fi

case $1 in
    create) [[ -z $2 ]] && { mksnap } || usage ;;
    remove) [[ -n $2 ]] && { delsnap $2 } || usage ;;
    *) usage;;
esac

print
exit 0
